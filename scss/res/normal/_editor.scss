#BigEditor .RESCloseButton,
button.RESBigEditorPop {
  @extend %tn-small-button;
  font-size: 0 !important;
  width: 16px;
  height: 16px;
  display: block;
  overflow: hidden;
  text-indent: -100px;
  margin-right: 2px;

  &:before {
    @extend %tn-icon;
    content: '';
    position: absolute;
    left: 5px;
    top: 2px;
  }
}

button.RESBigEditorPop {
  position: relative;
}

button.RESBigEditorPop {
  float: right;
  margin-left: 1em;
  width: 16px !important;
  height: 16px !important;
  min-width: 16px !important;
  padding: 2px 3px 3px 2px !important;
  clear: both;
  @include vendor(box-sizing, content-box);

  &:before {
    top: 3px;
    left: 3px;
    background-position: -16px -48px;
  }
}

.bottom-area > .help-toggle {
  margin-right: 10px;
}


.commentingAs,
.RESMacroWrappingSpan {
  float: none;
}

.commentingAs,
.markdownEditor + .RESMacroWrappingSpan {
  padding: 3px;
  margin: 0;
  border-top: solid 1px darken($res-editor-toolbar-bg, 10%);
  @include shadow(inset 0 1px 0 lighten($res-editor-toolbar-bg, 8%));
}

.commentingAs + .RESMacroWrappingSpan {
  position: absolute;
  right: 5px;
  top: 22px;
}

.BERight > h3,
.RESDialogSmall.livePreview > h3,
.BELeft,
.markdownEditor-wrapper {
  @extend %tn-toolbar;
  @include rounded(3px 3px 0 0);
  // @include linear-gradient(top, $res-editor-toolbar-bg, darken($res-editor-toolbar-bg, 5%));
}

.markdownEditor-wrapper {
  width: auto;
  position: relative;
  padding: 0;
  // border: solid 1px $default-border-color;
  border-bottom: none;
  margin: 0;

  + textarea#wiki_page_content,
  + div > textarea {
    margin: 0;
    // FIXME: this is mainly for RES, but let's put it here.
    // the toolbar and the textbox should always have the same width
    // but for some reason the the textbox is always shorter when it is resized
    // to its minimum width. this + 8px is a shitty workaround to fix that
    min-width: $comment-textbox-width + 8px;
    @include vendor(box-sizing, padding-box);
    @include rounded(0 0 3px 3px);
  }
}

.markdownEditor {
  padding: 3px 3px 0 3px;

  a.edit-btn {
    margin: 0;
    border-color: transparent;
    background-color: transparent;
    @include rounded(3px);

    &:hover,
    &:active {
      border-color: rgba(0, 0, 0, 0.26);
    }

    &:hover {
      @include shadow(inset 0 1px 0 lighten($res-editor-toolbar-bg, 10%));
    }

    &:active {
      background-color: rgba(0, 0, 0, 0.1);
      @include shadow(0 1px 1px lighten($res-editor-toolbar-bg, 10%));
    }
  }
}

.BERight,
.RESDialogSmall.livePreview {
  background: $text-bg;
  color: $text-fg;
  > h3 {
    border-bottom-color: $main-bg;
    @include shadow(0 1px 1px rgba(0, 0, 0, 0.15));
  }
}

.RESDialogSmall.livePreview {
  border-color: $main-bg !important;
  > h3 {
    border-top: none;
    border-left: none;
    border-right: none;
  }
}

// FIXME: this is bad. live preview should not have a very limited width.
// but if we don't limit its width to minimum textbox width, it will grow
// wide making the toolbar to also grow wide.
.RESDialogSmall.livePreview {
  max-width: $comment-textbox-width;
  border: solid 1px $default-border-color;
  margin-top: 1em;

  > h3 {
    padding: 7px;
    height: auto;
    @include rounded(3px 3px 0 0);
  }
}

.usertext-edit .RESDialogSmall .md.RESDialogContents,
.RESDialogSmall.livePreview {
  padding: 0 !important;
}

.usertext-edit .RESDialogSmall .md.RESDialogContents {
  margin: 0 10px;
}

.usertext-edit .RESDialogSmall .md.RESDialogContents,
.RESDialogSmall.livePreview > .md {
  background: none !important;
  @include rounded(0);
  @include shadow(none);
}

.RESCharCounter {
  padding: 1px 6px;
  color: $res-char-counter-fg;
  font-weight: bold;
  background: $res-char-counter-bg;
  margin: 1px 5px 0 0 !important;
  @include rounded(3px);

  &.tooLong {
    color: $res-char-counter-fg;
    background: $res-char-counter-too-long-bg;
  }

}

#alert_message {
  @extend %tn-form-group;

  .buttonContainer {
    > input[type=button] {
      @extend %tn-small-button;
      font-size: $normal-font-size;
      margin-right: 5px;
    }
  }

  > input[type=button] {
    @extend %tn-button;
    font-size: $normal-font-size;
    text-transform: capitalize;
  }

  table.commentPreview {
    @extend %tn-markdown-table;
  }
}


#BigEditor {
  > .RESDialogSmall {
    border: none;
    margin: 10px;
    @include shadow(0 3px 5px rgba(0, 0, 0, 0.3));

    > .RESDialogContents {
      margin: 0;
    }

    &.BELeft {
      > h3 {
        display: none;
      }

      > .RESDialogContents {
        padding: 0 0 100px 0 !important;
        width: 100%;
        outline: dashed 1px blue;

        > .markdownEditor-wrapper {
          border: none;
        }

        > #BigText {
          @extend %tn-markdown-editor-textbox;
          margin: 0;
          padding: 5px;
          width: 100%;
          overflow: auto;
          border-left: none !important;
          border-right: none !important;
          @include vendor(box-sizing, padding-box);
          @include rounded(0);
        }

        > .BEFoot {
          margin: 5px;
        }
      }
    }

    &.BERight {
      > .RESDialogContents {
        top: 40px;
        padding: 5px 10px;
        margin: 0 !important;
      }

    }
  }

  .RESCloseButton {
    padding-right: 4px;
    top: 9px;

    &.RESFadeButton {
      right: 42px;
      &:before {
        background-position: -96px -48px;
      }
    }

    &.close:before {
      background-position: 0 -32px;
    }
  }
}

&.wiki-page {
  button.RESBigEditorPop {
    clear: none;
    margin: 5px 0;
  }

  .wiki-page-content {
    > #editform {
      > div > .markdownEditor > .RESCharCounter {
        margin-right: 30px;
      }

      .help-toggle {
        display: block;
        float: left;
        margin: 5px 0 20px 0;
      }

      > label[for="reason"],
      > .livePreview {
        display: block;
        clear: left;
      }

      > .livePreview {
        min-width: 100%;
        width: 100%;
      }
    }
  }
}
